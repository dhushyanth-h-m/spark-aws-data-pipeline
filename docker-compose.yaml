version: '3'

services:
  # Airflow services
  airflow-webserver:
    build:
      context: ./docker/airflow
      dockerfile: Dockerfile
    image: nyc-taxi-pipeline/airflow:latest
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-scheduler
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__API__AUTH_BACKENDS=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - PROJECT_NAME=${PROJECT_NAME:-nyc-taxi-pipeline}
      - ENVIRONMENT=${ENVIRONMENT:-dev}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/config:/opt/airflow/config
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    build:
      context: ./docker/airflow
      dockerfile: Dockerfile
    image: nyc-taxi-pipeline/airflow:latest
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__FERNET_KEY=
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - PROJECT_NAME=${PROJECT_NAME:-nyc-taxi-pipeline}
      - ENVIRONMENT=${ENVIRONMENT:-dev}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/config:/opt/airflow/config
    command: scheduler

  # PostgreSQL for Airflow metadata
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  # Spark for local development and testing
  spark:
    build:
      context: ./docker/spark
      dockerfile: Dockerfile
    image: nyc-taxi-pipeline/spark:latest
    container_name: spark
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - PROJECT_NAME=${PROJECT_NAME:-nyc-taxi-pipeline}
      - ENVIRONMENT=${ENVIRONMENT:-dev}
    volumes:
      - ./spark/jobs:/opt/spark-jobs
      - ./spark/utils:/opt/spark-utils
      - ./data:/opt/data
    ports:
      - "4040:4040"
    command: tail -f /dev/null

volumes:
  postgres-db-volume: 